{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.ul, {\n    children: [\"\\n\", _jsx(_components.li, {\n      children: \"feat：提交新功能\"\n    }), \"\\n\", _jsx(_components.li, {\n      children: \"fix：修复了bug\"\n    }), \"\\n\", _jsx(_components.li, {\n      children: \"docs：只修改了文档\"\n    }), \"\\n\", _jsx(_components.li, {\n      children: \"style：调整代码格式，未修改代码逻辑（比如修改空格、格式化、缺少分号等）\"\n    }), \"\\n\", _jsx(_components.li, {\n      children: \"refactor：代码重构，既没修复bug也没有添加新功能\"\n    }), \"\\n\", _jsx(_components.li, {\n      children: \"perf：性能优化，提高性能的代码更改\"\n    }), \"\\n\", _jsx(_components.li, {\n      children: \"test：添加或修改代码测试\"\n    }), \"\\n\", _jsx(_components.li, {\n      children: \"chore：对构建流程或辅助工具和依赖库（如文档生成等）的更改\"\n    }), \"\\n\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Git commit message规范","date":"2021-03-13 20:53:00","description":"一份Git提交message的标题规范。","category":"tool"}},"frontMatter":{"title":"Git commit message规范","date":"2021-03-13 20:53:00","description":"一份Git提交message的标题规范。","category":"tool"}},"__N_SSG":true}