{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      ol: \"ol\",\n      li: \"li\",\n      p: \"p\",\n      pre: \"pre\",\n      code: \"code\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.h1, {\n        children: \"Fork的仓库与原仓库保持一致\"\n      }), \"\\n\", _jsxs(_components.ol, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"\\n\", _jsx(_components.p, {\n            children: \"使用 git remote -v 查看远程仓库路径，如果只有origin，说明还没设置upstream\"\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"\\n\", _jsx(_components.p, {\n            children: \"设置upstream\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          children: \"git remote add upstream <url>\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.ol, {\n        start: \"3\",\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"获取原仓库的更新\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          children: \"git fetch upstream\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.ol, {\n        start: \"4\",\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"合并远程的master分支\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          children: \"git merge upstream/master\\n\"\n        })\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Fork的仓库与原仓库保持一致","date":"2021-7-30 20:40:00","description":"Fork的仓库与原仓库保持一致"}},"frontMatter":{"title":"Fork的仓库与原仓库保持一致","date":"2021-7-30 20:40:00","description":"Fork的仓库与原仓库保持一致"}},"__N_SSG":true}