{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    p: \"p\",\n    blockquote: \"blockquote\",\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h3, {\n      children: \"ESLint 和 Prettier 的区别\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ESLint解决代码质量和代码格式问题\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Prettier解决代码格式问题\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"Linters usually contain not only code quality rules, but also stylistic rules. Most stylistic rules are unnecessary when using Prettier, but worse – they might conflict with Prettier!\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Prettier使用\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"安装\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"yarn add --dev --exact prettier\\n\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"配置.prettierrc.json和.prettierignore文件，根据使用框架参考对应开源项目\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"编辑器安装prettier插件并配置使用方式\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Git整合，确保代码提交的时候使用了格式化\"\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"整合方式有4种\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"lint-staged，\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"pretty-quick\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"pre-commit\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"precise-commits\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"使用lint-staged\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"npx mrm lint-staged\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"ESLint使用\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"两者一起使用\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"代码格式问题由Prettier接管，但是报错来源依旧是ESLint\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"// .eslintrc    \\n{      \\n    \\\"plugins\\\": [\\\"prettier\\\"],      \\n    \\\"rules\\\": {        \\n        \\\"prettier/prettier\\\": \\\"error\\\"      \\n    }    \\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"引用：\", _jsx(_components.a, {\n        href: \"https://ordina-jworks.github.io/angular/2018/10/08/angular-state-management-comparison.html\",\n        children: \"https://ordina-jworks.github.io/angular/2018/10/08/angular-state-management-comparison.html\"\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"ESLint 和 Prettier 的使用","date":"2021-03-13 20:53:00","description":"ESLint 和 Prettier 的区别和使用方法。"}},"frontMatter":{"title":"ESLint 和 Prettier 的使用","date":"2021-03-13 20:53:00","description":"ESLint 和 Prettier 的区别和使用方法。"}},"__N_SSG":true}