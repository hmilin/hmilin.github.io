{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"给出解决方案之前需要明确的点\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"目的性\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"监控一般有以下功能点：用户侧的性能数据量化值、即时的错误异常检测、回播用户行为\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"还有哪些是我未知的点？\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"基于这些功能点，针对不同系统，哪些功能是必要的，优先级？\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"成本\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"机器成本、购买成本和时间成本\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"各个功能点的实现原理\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"重新思考前端系统监控问题","date":"2024-02-29 20:21:33","description":"归纳目前掌握的性能分析技巧，记录未解决的问题。","public":false}},"frontMatter":{"title":"重新思考前端系统监控问题","date":"2024-02-29 20:21:33","description":"归纳目前掌握的性能分析技巧，记录未解决的问题。","public":false}},"__N_SSG":true}