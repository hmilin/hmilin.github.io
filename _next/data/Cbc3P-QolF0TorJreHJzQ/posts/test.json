{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    a: \"a\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"测试学习笔记\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"理论学习\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"几个原则\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"使用AAA模式构造测试内容：Arrange(准备)  Act(执行) Assert(断言)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"代码尽量简单，使用通用的断言方法\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"只测试公共方法\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"正确使用测试替身（主要是理清楚测试目的）\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"利用库(如faker.js)造一些真实数据进行测试，可以更早发现问题\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"使用快照时，使用短的行内快照\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"尽量避免使用全局初始化数据，每个测试中自己初始化需要的数据\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"不要catch错误，expect它们\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"给测试用例打tag，用于筛选目标用例实行，具体要看测试库如何实现\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"前端测试\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"将UI和功能分离，避免因为渲染复杂的UI拖慢测试速度\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"使用不容易改变的属性查询HTML，tag或者专属属性如data-testid，而不是css选择器\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"有条件下完全渲染组件进行测试，如果其中一个子组件明显拖慢测试(如动画)或使很难配置，可以考虑主动用伪组件替换它\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"避免使用sleep，使用库允许的等待操作，如cypress.request('url')，testin-library的wait(expect(element))\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"观察内容如何通过网络提供：\", \"\\n\", _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"使用一些活动监视器，以确保在真实网络下的页面负载是最优的\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"使用前端工具 (如 \", _jsx(_components.a, {\n              href: \"https://developers.google.com/web/tools/lighthouse/\",\n              children: \"lighthouse\"\n            }), \"、\", _jsx(_components.a, {\n              href: \"https://developers.google.com/speed/pagespeed/insights/\",\n              children: \"pagespeed\"\n            }), \") 以进行更全面的分析\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"非E2E测试时，避免使用真实后端API，使用替身库代替\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"写几个跨越整个系统的E2E测试，1-10个\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"通过复用登录凭证提速 E2E 测试\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"创建一个E2E冒烟测试，该测试跑一遍所有页面，可以避免因为打包问题有些页面没办法正常渲染\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"参考链接\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/goldbergyoni/javascript-testing-best-practices\",\n        children: \"https://github.com/goldbergyoni/javascript-testing-best-practices\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"测试学习笔记","date":"2022-11-25 16:55:43","description":"测试理论记录和实践。","public":true,"category":"tool"}},"frontMatter":{"title":"测试学习笔记","date":"2022-11-25 16:55:43","description":"测试理论记录和实践。","public":true,"category":"tool"},"headings":[{"depth":2,"text":"理论学习"},{"depth":3,"text":"几个原则"},{"depth":3,"text":"前端测试"},{"depth":2,"text":"参考链接"}]},"__N_SSG":true}